#!/usr/bin/env python3


# Controls the webcam in the obvious way with:
#    wasd for up, left, down, right by increments of S_VAL degrees
#    WASD for up, left, down, right by increments of L_VAL degrees
#    c for status
#    q for quit
# A numeric value followed by a direction (regardless of upper or lower case)
# will move the number of degrees specified by the numeric value in the given
# direction. Entering 'c' (for status) will clear any numbers already entered.
#
# Examples
# given:
#   S_VAL = 5
#   L_VAL = 20
# w moves up 5 degrees
# W moves up 20 degrees
# 56w moves up 56 degrees
# 56W moves up 56 degrees (not 20)
# 56cw moves up 5 degrees


import cryptography
import cryptography.fernet
import sys
import socket
import termios

S_VAL = 5
L_VAL = 20
KEY = "KM0ZRVIljWKiBLy293Al4Qm1VqbLF2at4gxLfoqtT7o="
# HOST = "riverhill.cxd.guru"
HOST = "0.0.0.0"
PORT = 65123

f = cryptography.fernet.Fernet(KEY)

# confusing magic to make getch() work
#
# This will also work, but affects the shell afterwards and requires
#    try, finally
# and
#    tty.setraw(sys.stdin.fileno())
# OR
#    tty.setcbreak(sys.stdin.fileno())
#    (import sys, tty)
# and possibly a terminal reset after in order to work.

bits = termios.tcgetattr(0)
bits[3] &= ~termios.ICANON
termios.tcsetattr(0, termios.TCSANOW, bits)

with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as s:

    s.bind(s.getsockname())  # bidirectional socket
    s.settimeout(1)  # timeout for response, 1 second
    nums = ""
    print("wasd/WASD, c for status, q to quit")
    while True:
        char = sys.stdin.read(1)

        # directions

        if char in "wW":
            msg = "up"

        elif char in "aA":
            msg = "left"

        elif char in "sS":
            msg = "down"

        elif char in "dD":
            msg = "right"

        # c, q, nums,error

        elif char == "c":
            msg = "status"

        elif char == "q":
            break
        elif char in "0123456789":
            nums = nums + char
            continue
        else:
            print()
            print("give me: {w,a,s,d,W,A,S,D,c,q,[0-9]}")
            continue

        if char in "wasdWASD":
            if nums:
                msg = msg + " " + nums
                nums = ""
            elif char in "WASD":
                msg = msg + " {}".format(L_VAL)
                nums = ""
            else:
                msg = msg + " {}".format(S_VAL)

        print()
        msg = f.encrypt(msg.encode("ascii"))
        s.sendto(msg, (HOST, PORT))

        d = None
        try:
            d, a = s.recvfrom(1024)
            print("\t%s", f.decrypt(d).decode("ascii").strip())
        except socket.timeout:
            print("\tgot no reply before timeout")
